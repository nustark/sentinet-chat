{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Chat from '../components/Chat';\nimport Layout from '../components/Layout';\n\nclass IndexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: null\n    });\n\n    _defineProperty(this, \"handleKeyUp\", evt => {\n      if (evt.keyCode === 13) {\n        const user = evt.target.value;\n        this.setState({\n          user\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      user\n    } = this.state;\n    return __jsx(Layout, {\n      pageTitle: \"Realtime Chat\"\n    }, __jsx(\"main\", {\n      className: \"container-fluid position-absolute h-100 bg-dark\"\n    }, __jsx(\"div\", {\n      className: \"row position-absolute w-100 h-100\"\n    }, __jsx(\"section\", {\n      className: \"col-md-8 d-flex flex-row flex-wrap align-items-center align-content-center px-5\"\n    }, __jsx(\"div\", {\n      className: \"px-5 mx-5\"\n    }, __jsx(\"span\", {\n      className: \"d-block w-100 h1 text-light\",\n      style: {\n        marginTop: -50\n      }\n    }, user ? __jsx(\"span\", null, __jsx(\"span\", {\n      style: {\n        color: '#999'\n      }\n    }, \"Hello!\"), \" \", user) : `What is your name?`), !user && __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control mt-3 px-3 py-2\",\n      onKeyUp: this.handleKeyUp,\n      autoComplete: \"off\",\n      style: {\n        background: 'transparent',\n        color: '#999',\n        border: 0,\n        borderBottom: '1px solid #666',\n        borderRadius: 0,\n        fontSize: '3rem',\n        fontWeight: 500,\n        boxShadow: 'none !important'\n      }\n    }))), __jsx(\"section\", {\n      className: \"col-md-4 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\"\n    }, user && __jsx(Chat, {\n      activeUser: user\n    })))));\n  }\n\n}\n\n;\nexport default (() => __jsx(IndexPage, null));","map":{"version":3,"sources":["/Users/thurman/cs/react/chat-sentiment/pages/index.js"],"names":["React","Component","Chat","Layout","IndexPage","user","evt","keyCode","target","value","setState","render","state","marginTop","color","handleKeyUp","background","border","borderBottom","borderRadius","fontSize","fontWeight","boxShadow"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCAExB;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAFwB;;AAAA,yCAIlBC,GAAG,IAAI;AACnB,UAAIA,GAAG,CAACC,OAAJ,KAAgB,EAApB,EAAwB;AACtB,cAAMF,IAAI,GAAIC,GAAG,CAACE,MAAJ,CAAWC,KAAzB;AACA,aAAKC,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACD;AACF,KAT+B;AAAA;;AAWhCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAW,KAAKO,KAAtB;AAEA,WACE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB,OACE;AAAM,MAAA,SAAS,EAAC;AAAhB,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAS,MAAA,SAAS,EAAC;AAAnB,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAA8C,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,CAAC;AAAb;AAArD,OACIR,IAAI,GAAG,oBAAM;AAAM,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAE;AAAR;AAAb,gBAAN,OAAmDT,IAAnD,CAAH,GAAsE,oBAD9E,CADF,EAII,CAACA,IAAD,IAAS;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,6BAA7B;AAA2D,MAAA,OAAO,EAAE,KAAKU,WAAzE;AAAsF,MAAA,YAAY,EAAC,KAAnG;AAAyG,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,aAAd;AAA6BF,QAAAA,KAAK,EAAE,MAApC;AAA4CG,QAAAA,MAAM,EAAE,CAApD;AAAuDC,QAAAA,YAAY,EAAE,gBAArE;AAAuFC,QAAAA,YAAY,EAAE,CAArG;AAAwGC,QAAAA,QAAQ,EAAE,MAAlH;AAA0HC,QAAAA,UAAU,EAAE,GAAtI;AAA2IC,QAAAA,SAAS,EAAE;AAAtJ;AAAhH,MAJb,CADF,CADF,EASE;AAAS,MAAA,SAAS,EAAC;AAAnB,OACIjB,IAAI,IAAI,MAAC,IAAD;AAAM,MAAA,UAAU,EAAEA;AAAlB,MADZ,CATF,CADF,CADF,CADF;AAmBD;;AAjC+B;;AAmCjC;AAED,gBAAe,MACb,MAAC,SAAD,OADF","sourcesContent":["import React, { Component } from 'react';\nimport Chat from '../components/Chat';\nimport Layout from '../components/Layout';\n\nclass IndexPage extends Component {\n\n  state = { user: null }\n\n  handleKeyUp = evt => {\n    if (evt.keyCode === 13) {\n      const user =  evt.target.value;\n      this.setState({ user });\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <Layout pageTitle=\"Realtime Chat\">\n        <main className=\"container-fluid position-absolute h-100 bg-dark\">\n          <div className=\"row position-absolute w-100 h-100\">\n            <section className=\"col-md-8 d-flex flex-row flex-wrap align-items-center align-content-center px-5\">\n              <div className=\"px-5 mx-5\">\n                <span className=\"d-block w-100 h1 text-light\" style={{marginTop: -50}}>\n                  { user ? <span><span style={{color: '#999'}}>Hello!</span> {user}</span> : `What is your name?` }\n                </span>\n                { !user && <input type=\"text\" className=\"form-control mt-3 px-3 py-2\" onKeyUp={this.handleKeyUp} autoComplete=\"off\" style={{ background: 'transparent', color: '#999', border: 0, borderBottom: '1px solid #666', borderRadius: 0, fontSize: '3rem', fontWeight: 500, boxShadow: 'none !important' }} /> }\n              </div>\n            </section>\n            <section className=\"col-md-4 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">\n              { user && <Chat activeUser={user} /> }\n            </section>\n          </div>\n        </main>\n      </Layout>\n    );\n  }\n\n};\n\nexport default () => (\n  <IndexPage />\n); "]},"metadata":{},"sourceType":"module"}