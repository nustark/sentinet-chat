{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\n\nvar ChatMessage = /*#__PURE__*/function (_Component) {\n  _inherits(ChatMessage, _Component);\n\n  function ChatMessage() {\n    _classCallCheck(this, ChatMessage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatMessage).apply(this, arguments));\n  }\n\n  _createClass(ChatMessage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$position = _this$props.position,\n          position = _this$props$position === void 0 ? 'left' : _this$props$position,\n          message = _this$props.message;\n      var isRight = position.toLowerCase() === 'right';\n      var align = isRight ? 'text-right' : 'text-left';\n      var justify = isRight ? 'justify-content-end' : 'justify-content-start';\n      var messageBoxStyles = {\n        maxWidth: '70%',\n        flexGrow: 0\n      };\n      var messageStyles = {\n        fontWeight: 500,\n        lineHeight: 1.4,\n        whiteSpace: 'pre-wrap'\n      };\n      return __jsx(\"div\", {\n        className: \"w-100 my-1 d-flex \".concat(justify)\n      }, __jsx(\"div\", {\n        className: \"bg-light rounded border border-gray p-2\",\n        style: messageBoxStyles\n      }, __jsx(\"span\", {\n        className: \"d-block text-secondary \".concat(align),\n        style: messageStyles\n      }, this.props.message)));\n    }\n  }]);\n\n  return ChatMessage;\n}(Component);\n\nexport default ChatMessage;","map":{"version":3,"sources":["/Users/thurman/cs/react/chat-sentiment/components/ChatMessage.js"],"names":["React","Component","ChatMessage","props","position","message","isRight","toLowerCase","align","justify","messageBoxStyles","maxWidth","flexGrow","messageStyles","fontWeight","lineHeight","whiteSpace"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;;;;;;;6BACO;AAAA,wBACkC,KAAKC,KADvC;AAAA,6CACGC,QADH;AAAA,UACGA,QADH,qCACc,MADd;AAAA,UACsBC,OADtB,eACsBA,OADtB;AAEL,UAAMC,OAAO,GAAGF,QAAQ,CAACG,WAAT,OAA2B,OAA3C;AAEA,UAAMC,KAAK,GAAGF,OAAO,GAAG,YAAH,GAAkB,WAAvC;AACA,UAAMG,OAAO,GAAGH,OAAO,GAAG,qBAAH,GAA2B,uBAAlD;AAEA,UAAMI,gBAAgB,GAAG;AACrBC,QAAAA,QAAQ,EAAE,KADW;AAErBC,QAAAA,QAAQ,EAAE;AAFW,OAAzB;AAKA,UAAMC,aAAa,GAAG;AAClBC,QAAAA,UAAU,EAAE,GADM;AAElBC,QAAAA,UAAU,EAAE,GAFM;AAGlBC,QAAAA,UAAU,EAAE;AAHM,OAAtB;AAMA,aACI;AAAK,QAAA,SAAS,8BAAuBP,OAAvB;AAAd,SACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAyD,QAAA,KAAK,EAAEC;AAAhE,SACI;AAAM,QAAA,SAAS,mCAA4BF,KAA5B,CAAf;AAAoD,QAAA,KAAK,EAAEK;AAA3D,SACC,KAAKV,KAAL,CAAWE,OADZ,CADJ,CADJ,CADJ;AASH;;;;EA5BqBJ,S;;AA+B1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\n    \nclass ChatMessage extends Component {\n    render() {\n        const { position = 'left', message } = this.props;\n        const isRight = position.toLowerCase() === 'right';\n        \n        const align = isRight ? 'text-right' : 'text-left';\n        const justify = isRight ? 'justify-content-end' : 'justify-content-start';\n        \n        const messageBoxStyles = {\n            maxWidth: '70%',\n            flexGrow: 0\n        };\n        \n        const messageStyles = {\n            fontWeight: 500,\n            lineHeight: 1.4,\n            whiteSpace: 'pre-wrap'\n        };\n    \n        return (\n            <div className={`w-100 my-1 d-flex ${justify}`}>\n                <div className=\"bg-light rounded border border-gray p-2\" style={messageBoxStyles}>\n                    <span className={`d-block text-secondary ${align}`} style={messageStyles}>\n                    {this.props.message}\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ChatMessage;"]},"metadata":{},"sourceType":"module"}